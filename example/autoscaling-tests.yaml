heat_template_version: rocky

parameters:
  count:
    type: number

resources:
  autoscaling-group:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 60
      desired_capacity: {get_param: count}
      #key_name: {get_param: key}
      # drive xxx
      #metadata: {"metering.server_group": {get_param: "OS::stack_id"}}
      #user_data:
      # user_data_format: RAW
      max_size: 2
      min_size: 1
      resource:
        type: OS::Nova::Server
        properties:
          flavor: a1-ram2-disk20-perf1
          image: "Ubuntu 20.04 LTS Focal Fossa"
          networks:
            - network: rke2-nodes-net
          security_groups:
            - default

  scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: autoscaling-group }
      cooldown: 60
      scaling_adjustment: 1

  scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: autoscaling-group }
      cooldown: 60
      scaling_adjustment: -1

  cpu_alarm_high:
    type: OS::Aodh::GnocchiAggregationByResourcesAlarm
    properties:
      description: Scale up if CPU > 60%
      metric: cpu
      aggregation_method: rate:mean
      granularity: 300
      evaluation_periods: 1
      threshold: 180000000000.0
      resource_type: instance
      comparison_operator: gt
      alarm_actions:
        - str_replace:
            template: trust+url
            params:
              url: {get_attr: [scaleup_policy, signal_url]}
      query:
        str_replace:
          template: '{"=": {"server_group": "stack_id"}}'
          params:
            stack_id: {get_param: "OS::stack_id"}

  cpu_alarm_low:
    type: OS::Aodh::GnocchiAggregationByResourcesAlarm
    properties:
      description: Scale down if CPU < 30%
      metric: cpu
      aggregation_method: rate:mean
      granularity: 300
      evaluation_periods: 1
      threshold: 90000000000.0
      resource_type: instance
      comparison_operator: lt
      alarm_actions:
        - str_replace:
            template: trust+url
            params:
              url: {get_attr: [scaledown_policy, signal_url]}
      query:
        str_replace:
          template: '{"=": {"server_group": "stack_id"}}'
          params:
            stack_id: {get_param: "OS::stack_id"}

outputs:
  scaleup_policy_signal_url:
    value: {get_attr: [scaleup_policy, signal_url]}

  scaledown_policy_signal_url:
    value: {get_attr: [scaledown_policy, signal_url]}

